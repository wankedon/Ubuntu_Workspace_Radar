#include "stdafx.h"
#include "SuperSocketAPI.h"
#include "HandlePool.h"

unique_ptr<HandlePool> uniquePool;///???????unique_ptr ???HandlePool?????????????????uniquePool
SUPERSOCKET_API SSError SS_InitSSLib()
{
	zsys_init();                ///?????CZMQ zsys ???????? ??????socket??actor?????????
	if (uniquePool == nullptr)  ///???unique_ptr?????????? ???? if(!uniquePool)
	{
		uniquePool = make_unique<HandlePool>();	///<???????????
	}
	return SS_ERR_NONE;
}

SUPERSOCKET_API SSError SS_DeinitSSLib()
{
	uniquePool.reset(); ///????????? raw??? ??unique_ptr???????
	zsys_shutdown();
	return SS_ERR_NONE;
}

SUPERSOCKET_API SSError SS_CreateSocket(int* fd, const char* peerAddr, const SSEventCallback* callbacks)
{
	if (uniquePool == nullptr)                     ///???uniquePool???                                         
		return SS_ERR_INIT;                        ///???????????
	string addr(peerAddr);                         ///ip????????addr????192.168.000????
	*fd = uniquePool->newHandle(addr, *callbacks); ///???????????????????fd??????????????????SuperSocket????
	return *fd > 0 ? SS_ERR_NONE : SS_ERR_CREATE;
}

SUPERSOCKET_API SSError SS_DestroySocket(int fd)
{
	if (uniquePool == nullptr)
		return SS_ERR_INIT;
	return uniquePool->closeHandle(fd);            ///?????
}

SUPERSOCKET_API SSError SS_SendBlock(int fd, const DataBlock& block)
{
	if (uniquePool == nullptr)
		return SS_ERR_INIT;
	return uniquePool->send(fd, block);            ///??????????SuperSocket??????????
}
